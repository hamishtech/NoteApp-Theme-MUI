{"version":3,"sources":["gql/queries.js","state/userContext.js","components/Layout.js","gql/mutations.js","pages/Create.js","pages/HomePage.js","components/Copyright.js","pages/Login.js","components/EditDialog.js","components/NoteCard.js","pages/Notes.js","pages/SignUp.js","pages/Page404.js","App.js","index.js"],"names":["GET_USER","gql","UserContext","React","createContext","ContextProvider","children","useQuery","data","refetch","Provider","value","useStyles","makeStyles","theme","page","width","drawer","root","display","active","background","title","padding","spacing","appBar","toolbar","height","date","flexGrow","avatar","marginRight","Layout","classes","history","useHistory","location","useLocation","useContext","client","useApolloClient","sideBarList","text","icon","SubjectOutlined","color","path","AddCircleOutlineOutlined","className","AppBar","elevation","Toolbar","Typography","variant","format","Date","component","getUser","username","CircularProgress","size","Avatar","src","Button","onClick","window","localStorage","removeItem","clearStore","push","Drawer","paper","anchor","List","map","item","ListItem","pathname","button","ListItemIcon","ListItemText","CREATE_NOTE","LOGIN","CREATE_USER","DELETE_NOTE","EDIT_NOTE","field","marginTop","marginBottom","Create","useState","setTitle","details","setDetails","titleError","setTitleError","detailsError","setDetailsError","category","setCategory","useMutation","addNote","Container","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","variables","then","TextField","onChange","target","label","fullWidth","required","error","multiline","rows","FormControl","FormLabel","RadioGroup","defaultValue","FormControlLabel","control","Radio","type","endIcon","minWidth","minHeight","backgroundSize","backgroundRepeat","backgroundImage","spaceCreator","backgroundColor","textAlign","HomePage","Grid","xs","container","direction","justify","style","Paper","fontFamily","Copyright","align","Link","href","getFullYear","Alert","props","image","palette","grey","backgroundPosition","margin","flexDirection","alignItems","secondary","main","form","submit","alert","SignIn","password","setPassword","setUserName","open","setOpen","onError","login","result","handleClose","event","reason","useEffect","setItem","token","setTimeout","CssBaseline","sm","md","square","length","id","name","autoFocus","Checkbox","Box","mt","Snackbar","autoHideDuration","onClose","severity","dialogTitle","justifyContent","dialogRoot","categoryLabel","fontSize","actionsRoot","gap","LabelRoot","EditDialog","reverseOpen","note","setError","editNote","Dialog","aria-labelledby","maxWidth","DialogTitle","alignSelf","IconButton","resetStore","DialogContent","dividers","row","DialogActions","startIcon","useStyle","card","border","yellow","green","pink","red","purple","NoteCard","deleteNote","Card","CardHeader","toUpperCase","action","DeleteOutlined","subheader","CardContent","Notes","userContext","console","log","breakpointCols","default","1100","700","columnClassName","notes","SignUp","createUser","setUsername","getItem","handleSubmit","a","Page404","createMuiTheme","primary","indigo","typography","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","user","ThemeProvider","exact","to","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f532955f.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_USER = gql`\n  query {\n    getUser {\n      username\n      notes {\n        title\n        details\n        date\n        category\n        id\n      }\n    }\n  }\n`;\n","import { useQuery } from '@apollo/client';\nimport React from 'react';\nimport { GET_USER } from '../gql/queries';\n\nexport const UserContext = React.createContext('');\n\nconst ContextProvider = ({ children }) => {\n  const { data, refetch } = useQuery(GET_USER);\n\n  return (\n    <UserContext.Provider value={[data, refetch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default ContextProvider;\n","import {\n  AppBar,\n  Avatar,\n  Button,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons';\nimport { format } from 'date-fns';\nimport React, { useContext, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { UserContext } from '../state/userContext';\nimport { useApolloClient } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    page: { width: '100%' },\n    drawer: { width: drawerWidth },\n    root: { display: 'flex' },\n    active: { background: '#f4f4f4' },\n    title: { padding: theme.spacing(3) },\n    appBar: { width: `calc(100% - ${drawerWidth}px)` },\n    toolbar: { height: '90px' },\n    date: { flexGrow: '1' },\n    avatar: { marginRight: theme.spacing(2) },\n  };\n});\n\nconst Layout = ({ children }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const [data, fetch] = useContext(UserContext);\n  const client = useApolloClient();\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('tokenValue');\n    client.clearStore();\n    history.push('/');\n  };\n\n  const sideBarList = [\n    {\n      text: 'My Notes',\n      icon: <SubjectOutlined color='secondary' />,\n      path: '/notes',\n    },\n    {\n      text: 'Create Note',\n      icon: <AddCircleOutlineOutlined color='secondary' />,\n      path: '/create',\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      {/* APP BAR */}\n      <AppBar elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Typography className={classes.date} variant='body1'>\n            {format(new Date(), 'do MMMM Y')}\n          </Typography>\n          <Typography\n            variant='body1'\n            component={'span'}\n            className={classes.avatar}\n          >\n            {data ? (\n              data.getUser.username\n            ) : (\n              <CircularProgress color='secondary' size='25px' />\n            )}{' '}\n          </Typography>{' '}\n          <Avatar src='' className={classes.avatar} />\n          <div>\n            {' '}\n            <Button\n              variant='contained'\n              color='secondary'\n              onClick={handleLogout}\n            >\n              Logout\n            </Button>{' '}\n          </div>\n        </Toolbar>\n      </AppBar>\n      {/* SIDE BAR */}\n      <Drawer\n        classes={{ paper: classes.drawer }}\n        className={classes.drawer}\n        anchor='left'\n        variant='permanent'\n      >\n        <div>\n          <Typography variant='h5' className={classes.title}>\n            My Notes\n          </Typography>\n        </div>\n        <List>\n          {sideBarList.map((item) => {\n            return (\n              <ListItem\n                key={item.text}\n                className={\n                  location.pathname === item.path ? classes.active : null\n                }\n                button\n                onClick={() => {\n                  history.push(item.path);\n                }}\n              >\n                <ListItemIcon>{item.icon}</ListItemIcon>\n                <ListItemText>{item.text}</ListItemText>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Drawer>\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import { gql } from '@apollo/client';\n\nexport const CREATE_NOTE = gql`\n  mutation CreateNote($title: String!, $details: String!, $category: String!) {\n    createNote(title: $title, details: $details, category: $category) {\n      title\n      details\n    }\n  }\n`;\n\nexport const LOGIN = gql`\n  mutation Login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      token\n    }\n  }\n`;\n\nexport const CREATE_USER = gql`\n  mutation CreateUser($username: String!, $password: String!) {\n    createUser(username: $username, password: $password) {\n      token\n    }\n  }\n`;\n\nexport const DELETE_NOTE = gql`\n  mutation DeleteNote($id: String!) {\n    deleteNote(id: $id)\n  }\n`;\n\nexport const EDIT_NOTE = gql`\n  mutation EditNote(\n    $title: String!\n    $details: String!\n    $category: String!\n    $id: ID!\n  ) {\n    editNote(title: $title, details: $details, category: $category, id: $id) {\n      title\n      details\n    }\n  }\n`;\n","import { useMutation } from '@apollo/client';\nimport {\n    FormControl, FormControlLabel, FormLabel,\n    makeStyles,\n    Radio,\n    RadioGroup\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { CREATE_NOTE } from '../gql/mutations';\nimport { UserContext } from '../state/userContext';\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block',\n  },\n});\n\nexport default function Create() {\n  const classes = useStyles();\n  const [title, setTitle] = useState('');\n  const [details, setDetails] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState('todos');\n  const [addNote] = useMutation(CREATE_NOTE);\n  const history = useHistory();\n  const [_, refetch] = useContext(UserContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (title === '') {\n      return setTitleError(true);\n    }\n    if (details === '') {\n      return setDetailsError(true);\n    }\n    if (title && details) {\n      addNote({ variables: { title, details, category } }).then(() => {\n        refetch();\n      });\n      setTitle('');\n      setDetails('');\n      history.push('/notes');\n    }\n  };\n\n  return (\n    <Container size='xl'>\n      <Typography\n        variant='h6'\n        color='textSecondary'\n        component='h2'\n        gutterBottom\n      >\n        Create a New Note\n      </Typography>\n\n      <form noValidate autoComplete='off' onSubmit={handleSubmit}>\n        <TextField\n          className={classes.field}\n          onChange={(e) => setTitle(e.target.value)}\n          label='Note Title'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n          required\n          error={titleError}\n        />\n        <TextField\n          className={classes.field}\n          onChange={(e) => setDetails(e.target.value)}\n          label='Details'\n          variant='outlined'\n          color='secondary'\n          multiline\n          rows={4}\n          fullWidth\n          required\n          error={detailsError}\n        />\n\n        <FormControl className={classes.field}>\n          <FormLabel>Note Category </FormLabel>\n          <RadioGroup\n            defaultValue={category}\n            onChange={(e) => {\n              setCategory(e.target.value);\n            }}\n          >\n            <FormControlLabel control={<Radio />} label='Money' value='money' />\n            <FormControlLabel control={<Radio />} label='Todos' value='todos' />\n            <FormControlLabel\n              control={<Radio />}\n              label='Reminders'\n              value='reminders'\n            />\n            <FormControlLabel control={<Radio />} label='Study' value='study' />\n          </RadioGroup>\n        </FormControl>\n\n        <Button\n          type='submit'\n          color='secondary'\n          variant='contained'\n          endIcon={<KeyboardArrowRightIcon />}\n        >\n          Submit\n        </Button>\n      </form>\n    </Container>\n  );\n}\n","import {\n  AppBar,\n  Button,\n  Container,\n  Grid,\n  makeStyles,\n  Paper,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: '100%',\n    minHeight: '100vh',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundImage:\n      'url(\"https://images.unsplash.com/photo-1586156926774-098f04336b57?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2767&q=80\")',\n  },\n  title: { flexGrow: 1 },\n  spaceCreator: { height: '100px', backgroundColor: 'transparent' },\n  paper: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst HomePage = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <AppBar>\n        <Toolbar>\n          <Typography className={classes.title}>Hamish's Note App</Typography>\n          <Button\n            variant='contained'\n            color='secondary'\n            onClick={() => {\n              history.push('/login');\n            }}\n          >\n            Login\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.spaceCreator}></div>\n      <Grid\n        xs={12}\n        container\n        spacing={0}\n        direction='column'\n        justify='center'\n        style={{ minHeight: '60vh' }}\n      >\n        <Paper className={classes.paper} elevation={0}>\n          {' '}\n          <Typography variant='h2'>\n            {' '}\n            <pre style={{ fontFamily: 'inherit' }}></pre>Organize your notes{' '}\n          </Typography>{' '}\n          <Typography variant='h2'> with this Note App! </Typography>\n          <Button\n            variant='contained'\n            color='primary'\n            onClick={() => {\n              history.push('/login');\n            }}\n            style={{ marginTop: '30px' }}\n          >\n            Get started!{' '}\n          </Button>\n        </Paper>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import { Link, Typography } from '@material-ui/core';\nimport React from 'react';\n\nexport function Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link color='inherit' href='https://material-ui.com/'>\n        HB-Technology{' '}\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN } from '../gql/mutations';\nimport { useHistory } from 'react-router-dom';\nimport { Copyright } from '../components/Copyright';\nimport { UserContext } from '../state/userContext';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  alert: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [password, setPassword] = useState('');\n  const [username, setUserName] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [login, result] = useMutation(LOGIN, {\n    onError: (error) => {\n      setOpen(true);\n    },\n  });\n  const history = useHistory();\n  const [userContext, refetch] = useContext(UserContext);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password.length <= 3 || username.length <= 3) {\n      setOpen(true);\n      setTimeout(() => {\n        setOpen(false);\n      }, 5000);\n    }\n    login({ variables: { password, username } });\n  };\n\n  useEffect(() => {\n    if (result.data) {\n      window.localStorage.setItem('tokenValue', result.data.login.token);\n      refetch();\n      setTimeout(() => {\n        history.push('/notes');\n      }, 1000);\n    }\n  }, [result.data, history]);\n\n  return (\n    <Grid container component='main' className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component='h1' variant='h5'>\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <TextField\n              variant='outlined'\n              margin='normal'\n              required\n              error={open}\n              fullWidth\n              onChange={(e) => {\n                setUserName(e.target.value);\n              }}\n              id='email'\n              label='Username'\n              name='username'\n              autoComplete='username'\n              autoFocus\n            />\n            <TextField\n              variant='outlined'\n              margin='normal'\n              required\n              error={open}\n              fullWidth\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n              name='password'\n              label='Password'\n              type='password'\n              id='password'\n              autoComplete='current-password'\n            />\n            <FormControlLabel\n              control={<Checkbox value='remember' color='primary' />}\n              label='Remember me'\n            />\n            <Button\n              type='submit'\n              fullWidth\n              variant='contained'\n              color='primary'\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href='#' variant='body2'>\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href='/register' variant='body2'>\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n          <div className={classes.alert}>\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n              <Alert onClose={handleClose} severity='error'>\n                Invalid login details!\n              </Alert>\n            </Snackbar>\n          </div>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useApolloClient, useMutation } from '@apollo/client';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  IconButton,\n  makeStyles,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Done';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { EDIT_NOTE } from '../gql/mutations';\n\nconst useStyles = makeStyles((theme) => ({\n  dialogTitle: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 0,\n  },\n  dialogRoot: { backgroundColor: '#f9f9f9', padding: theme.spacing(2) },\n  categoryLabel: { fontSize: 15 },\n  actionsRoot: { gap: '10px', marginTop: '10px' },\n  LabelRoot: { marginTop: '15px' },\n}));\n\nconst EditDialog = ({ open, reverseOpen, note }) => {\n  const [title, setTitle] = useState(note.title);\n  const [error, setError] = useState(false);\n  const [details, setDetails] = useState(note.details);\n  const [category, setCategory] = useState(note.category);\n  const client = useApolloClient();\n  const [editNote] = useMutation(EDIT_NOTE);\n  const id = note.id;\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError(false);\n    setError(false);\n\n    if (title === '') {\n      return setError(true);\n    }\n    if (details === '') {\n      return setError(true);\n    }\n    if (title && details) {\n      editNote({ variables: { id: id, title, details, category } }).then(() => {\n        client.resetStore();\n      });\n      reverseOpen();\n      history.push('/notes');\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <Dialog\n      open={open}\n      onClose={reverseOpen}\n      aria-labelledby='form-dialog-title'\n      fullWidth\n      maxWidth='md'\n      classes={{ paper: classes.dialogRoot }}\n    >\n      <DialogTitle id='form-dialog-title'>\n        <div style={{ display: 'flex' }}>\n          <Typography\n            variant='h6'\n            component='div'\n            style={{ flexGrow: 1, width: '100%', alignSelf: 'center' }}\n          >\n            Update your note\n          </Typography>{' '}\n          <IconButton onClick={reverseOpen}>\n            {' '}\n            <CloseIcon color='primary' />\n          </IconButton>\n        </div>\n      </DialogTitle>\n      <form onSubmit={handleSubmit}>\n        <DialogContent dividers>\n          <TextField\n            size='medium'\n            multiline={true}\n            margin='normal'\n            onChange={({ target }) => {\n              setTitle(target.value);\n            }}\n            autoFocus\n            error={error}\n            variant='outlined'\n            id='name'\n            label='Title'\n            fullWidth\n            defaultValue={note.title}\n          ></TextField>\n          <TextField\n            variant='outlined'\n            autoFocus\n            error={error}\n            onChange={({ target }) => {\n              setDetails(target.value);\n            }}\n            margin='dense'\n            id='name'\n            multiline={true}\n            label='Details'\n            defaultValue={note.details}\n            fullWidth\n          />{' '}\n          <FormControl className={classes.field} required variant='filled'>\n            <FormLabel\n              className={classes.categoryLabel}\n              classes={{ root: classes.LabelRoot }}\n            >\n              Note Category{' '}\n            </FormLabel>\n            <RadioGroup\n              row\n              defaultValue={category}\n              onChange={(e) => {\n                setCategory(e.target.value);\n              }}\n            >\n              <FormControlLabel\n                control={<Radio />}\n                label='Money'\n                value='money'\n              />\n              <FormControlLabel\n                control={<Radio />}\n                label='Todos'\n                value='todos'\n              />\n              <FormControlLabel\n                control={<Radio />}\n                label='Reminders'\n                value='reminders'\n              />\n              <FormControlLabel\n                control={<Radio />}\n                label='Study'\n                value='study'\n              />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n        <DialogActions classes={{ root: classes.actionsRoot }}>\n          <Button\n            type='submit'\n            startIcon={<DoneIcon />}\n            color='primary'\n            variant='contained'\n          >\n            Update\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default EditDialog;\n","import { useApolloClient, useMutation } from '@apollo/client';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  IconButton,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport { green, pink, purple, red, yellow } from '@material-ui/core/colors';\nimport { DeleteOutlined } from '@material-ui/icons';\nimport EditIcon from '@material-ui/icons/Edit';\nimport React, { useState } from 'react';\nimport { DELETE_NOTE } from '../gql/mutations';\nimport EditDialog from './EditDialog';\n\nconst useStyle = makeStyles((theme) => {\n  return {\n    card: {\n      padding: theme.spacing(3),\n    },\n    note: {\n      border: (note) => {\n        return note.category === 'todos' ? '1px solid red' : null;\n      },\n    },\n    avatar: {\n      backgroundColor: (note) => {\n        switch (note.category) {\n          case 'todos':\n            return yellow[700];\n          case 'reminders':\n            return green[500];\n          case 'work':\n            return pink[500];\n          case 'study':\n            return red[500];\n          default:\n            return purple[500];\n        }\n      },\n    },\n  };\n});\n\nconst NoteCard = ({ note }) => {\n  const client = useApolloClient();\n  const id = note.id;\n  const [deleteNote] = useMutation(DELETE_NOTE);\n  const handleDelete = () => {\n    deleteNote({ variables: { id: id } }).then(() => {\n      client.resetStore();\n    });\n  };\n  const classes = useStyle(note);\n  const [open, setOpen] = useState(false);\n  const reverseOpen = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div>\n      <Card elevation={5} className={classes.note}>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>\n              {note.category[0].toUpperCase()}\n            </Avatar>\n          }\n          action={\n            <div>\n              <IconButton>\n                <DeleteOutlined onClick={handleDelete} />\n              </IconButton>\n              <IconButton>\n                <EditIcon onClick={reverseOpen} />\n              </IconButton>\n            </div>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        <CardContent>\n          <Typography variant='body1'> {note.details}</Typography>\n        </CardContent>\n      </Card>\n      <EditDialog open={open} reverseOpen={reverseOpen} note={note} />\n    </div>\n  );\n};\n\nexport default NoteCard;\n","import { CircularProgress, Container } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport Masonry from 'react-masonry-css';\nimport { useHistory } from 'react-router-dom';\nimport NoteCard from '../components/NoteCard';\nimport { UserContext } from '../state/userContext';\n\nexport default function Notes() {\n  const breakpoints = { default: 3, 1100: 2, 700: 1 };\n  const [userContext, refetch] = useContext(UserContext);\n  const history = useHistory();\n\n  console.log(userContext);\n\n  return (\n    <Container>\n      {userContext ? (\n        <Masonry\n          breakpointCols={breakpoints}\n          className='my-masonry-grid'\n          columnClassName='my-masonry-grid_column'\n        >\n          {userContext.getUser.notes.map((note) => {\n            return (\n              <div key={note.date}>\n                <NoteCard variant='outlined' note={note} />\n              </div>\n            );\n          })}\n        </Masonry>\n      ) : (\n        <CircularProgress color='secondary' size='25px' />\n      )}\n    </Container>\n  );\n}\n","import { useMutation } from '@apollo/client';\nimport { Snackbar } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Alert from '@material-ui/lab/Alert';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Copyright } from '../components/Copyright';\nimport { CREATE_USER } from '../gql/mutations';\nimport { UserContext } from '../state/userContext';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [createUser, result] = useMutation(CREATE_USER);\n  const [username, setUsername] = useState('');\n  const [open, setOpen] = useState(false);\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const [_, refetch] = useContext(UserContext);\n\n  console.log(window.localStorage.getItem('tokenValue'));\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      if (username.length <= 3 || password.length <= 3) {\n        setOpen(true);\n        return;\n      }\n      createUser({ variables: { username, password } });\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    if (result.data) {\n      window.localStorage.setItem('tokenValue', result.data.createUser.token);\n      refetch();\n      setTimeout(() => {\n        history.push('/notes');\n      }, 1000);\n    }\n  }, [result.data, history]);\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                autoComplete='fname'\n                name='userName'\n                variant='outlined'\n                required\n                onChange={({ target }) => {\n                  setUsername(target.value);\n                }}\n                fullWidth\n                error={open}\n                id='userName'\n                label='Username'\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant='outlined'\n                error={open}\n                fullWidth\n                id='email'\n                label='Email Address'\n                name='email'\n                autoComplete='email'\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant='outlined'\n                required\n                error={open}\n                fullWidth\n                onChange={({ target }) => {\n                  setPassword(target.value);\n                }}\n                name='password'\n                label='Password'\n                type='password'\n                id='password'\n                autoComplete='current-password'\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify='flex-end'>\n            <Grid item>\n              <Link href='/login' variant='body2'>\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Snackbar\n        open={open}\n        autoHideDuration={5000}\n        onClose={() => {\n          setOpen(false);\n        }}\n      >\n        <Alert severity='error'>\n          Include more than 3 characters for both your username and password\n        </Alert>\n      </Snackbar>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\n\nconst Page404 = () => {\n  return <div>404:page not found</div>;\n};\n\nexport default Page404;\n","import { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { green, indigo } from '@material-ui/core/colors';\nimport { useContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Layout from './components/Layout';\nimport Create from './pages/Create';\nimport HomePage from './pages/HomePage';\nimport SignIn from './pages/Login';\nimport Notes from './pages/Notes';\nimport SignUp from './pages/SignUp';\nimport Page404 from './pages/Page404';\n\nimport { UserContext } from './state/userContext';\n\nconst theme = createMuiTheme({\n  palette: {\n    palette: {\n      primary: green,\n      secondary: indigo,\n    },\n  },\n  typography: {\n    fontFamily: 'Quicksand',\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n  },\n});\n\nfunction App() {\n  const [user, refetch] = useContext(UserContext);\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route path='/login'>\n            <SignIn />\n          </Route>\n          <Route path='/register'>\n            <SignUp />\n          </Route>\n          <Route exact path='/'>\n            <HomePage />\n          </Route>\n          <Route path='/create'>\n            <Layout>\n              {user || window.localStorage.getItem('tokenValue') ? (\n                <Create />\n              ) : (\n                <Redirect to='/login' />\n              )}\n            </Layout>\n          </Route>\n          <Route path='/notes'>\n            <Layout>\n              {user || window.localStorage.getItem('tokenValue') ? (\n                <Notes />\n              ) : (\n                <Redirect to='/login' />\n              )}\n            </Layout>\n          </Route>\n          <Route>\n            <Page404 />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ApolloProvider } from '@apollo/client/react';\nimport ContextProvider from './state/userContext';\nimport { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('tokenValue');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ContextProvider>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ContextProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}